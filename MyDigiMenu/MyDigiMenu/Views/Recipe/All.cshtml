@{
    ViewBag.Title = "Recipe Management";
}

<div class="card shadow mb-4">
    <div class="card-header py-3 d-flex justify-content-between align-items-center">
        <h6 class="m-0 font-weight-bold text-primary">Recipe List</h6>
        <div>
            <a href="@Url.Action("Create", "Recipe")" class="btn btn-primary btn-sm">
                <i class="fas fa-plus"></i> Add New Recipe
            </a>
        </div>
    </div>
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>Success!</strong> @TempData["SuccessMessage"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
    else if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>Error!</strong> @TempData["ErrorMessage"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
    <div class="row mb-3" style="margin-top: 20px; margin-left: 10px">
        <div class="col-md-4">
            <div class="input-group">
                <input type="text" id="customSearch" class="form-control" placeholder="Search recipes...">
                <div class="input-group-append">
                    <button id="searchButton" class="btn btn-primary" type="button">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table id="recipeTable" class="table table-striped table-bordered nowrap" style="width:100%">
                <thead class="thead-dark">
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Price (USD)</th>
                        <th>Price (KHR)</th>
                        <th>Discount</th>
                        <th>Category</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        var table = $('#recipeTable').DataTable({
            "processing": true,
            "serverSide": true,
            "ordering": false,
            "dom": 'rtip',
            "paging": true,
            "ajax": {
                "url": "@Url.Action("All", "Recipe")",
                "type": "POST",
                "data": function (d) {
                    return {
                        draw: d.draw,
                        start: d.start,
                        length: d.length,
                        searchValue: $('#customSearch').val()
                    };
                },
            },
            "columns": [
                { "data": "Name", "name": "Name" },
                { "data": "Description", "name": "Description" },
                {
                    "data": "PriceUsd",
                    "name": "PriceUsd",
                    "render": function (data, type, row) {
                        const discount = row.Discount;
                        const discountedPrice = data - (data * (discount / 100));
                        return `
                            <div>
                                <span style="text-decoration: line-through;">$${data.toFixed(2)}</span>
                                <span style="font-weight: bold; color: red;"> $${discountedPrice.toFixed(2)}</span>
                            </div>
                        `;
                    }
                },
                {
                    "data": "PriceKhr",
                    "name": "PriceKhr",
                    "render": function (data, type, row) {
                        const discount = row.Discount;
                        const discountedPrice = data - (data * (discount / 100));
                        return `
                            <div>
                                <span style="text-decoration: line-through;">៛${data.toFixed(0)}</span>
                                <span style="font-weight: bold; color: red;"> ៛${discountedPrice.toFixed(0)}</span>
                            </div>
                        `;
                    }
                },
                {
                    "data": "Discount",
                    "name": "Discount",
                    "render": function (data, type, row) {
                        return `
                        <span>${data}%</span>
                    `;
                    }
                },
                { "data": "Category", "name": "Category" },
                {
                    "data": "Active",
                    "name": "Active",
                    "render": function (data, type, row) {
                        return data ?
                            `<a href="#" id="status-${row.Id}" class="badge badge-success" onclick="updateStatus('${row.Id}', 'Inactive')">Active</a>` :
                            `<a href="#" id="status-${row.Id}" class="badge badge-secondary" onclick="updateStatus('${row.Id}', 'Active')">Inactive</a>`;
                    }
                },
                {
                    "data": null,
                    "orderable": false,
                    "render": function(data, type, row) {
                        return `
                            <div class="btn-group">
                                <a href="/Recipe/Edit?id=${row.Id}" class="btn btn-sm btn-warning">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <a href="/Recipe/View?id=${row.Id}" class="btn btn-sm btn-info">
                                    <i class="fas fa-eye"></i>
                                </a>
                                <button class="btn btn-sm btn-danger delete-btn" data-id="${row.Id}">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        `;
                    }
                }
            ],
            "order": [[0, "asc"]], // Default sort by Name ascending
            "responsive": true,
            "lengthMenu": [10, 25, 50, 100],
            "language": {
                "emptyTable": "No recipes found",
                "processing": "<i class='fas fa-spinner fa-spin'></i> Loading recipes..."
            }
        });

        // Delete button handler
        $('#recipeTable').on('click', '.delete-btn', function() {
            var recipeId = $(this).data('id');
            if (confirm('Are you sure you want to delete this recipe?')) {
                $.post('@Url.Action("Delete", "Recipe")', { id: recipeId })
                    .done(function() {
                        $('#recipeTable').DataTable().ajax.reload();
                        toastr.success('Recipe deleted successfully');
                    })
                    .fail(function() {
                        toastr.error('Error deleting recipe');
                    });
            }
        });

        $('#searchButton').on('click', function () {
            table.search($('#customSearch').val()).draw();
        });

        $('#customSearch').on('keyup', function (e) {
            if (e.key === 'Enter') {
                table.search($(this).val()).draw();
            }
        });

    });

    function updateStatus(id, status) {
        console.log(id + " " + status);
        fetch('/Recipe/' + status, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ id: id }),
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const newStatus = data.status === 'active' ?
                        `<a href="#" id="status-${id}" class="badge badge-success" onclick="updateStatus('${id}', 'Inactive')">Active</a>` :
                        `<a href="#" id="status-${id}" class="badge badge-secondary" onclick="updateStatus('${id}', 'Active')">Inactive</a>`;

                    const statusElement = document.getElementById(`status-${id}`);
                    const newElement = document.createElement('div');

                    newElement.innerHTML = newStatus;
                    statusElement.parentNode.replaceChild(newElement.firstChild, statusElement);
                } else {
                    alert('Failed to update status, error: ' + data.message);
                }
            })
            .catch((error) => {
                console.error('Error:', error);
            });
    }
</script>