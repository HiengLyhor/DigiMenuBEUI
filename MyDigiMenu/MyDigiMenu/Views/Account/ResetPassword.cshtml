@model MyDigiMenu.Models.PasswordReset
@{
    Layout = null;
    ViewBag.Title = "Reset Password - E-Menu Admin";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <link rel="icon" type="image/png" href="~/Content/logo-color.png">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/Content/LoginStyle.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/Scripts/Hidden.js"></script>
    <style>

        .textbox.password-field {
            position: relative;
            margin-bottom: 15px;
        }

        .toggle-password {
            position: absolute;
            right: 12px;
            top: 25px; /* Fixed position from top */
            background: none;
            border: none;
            cursor: pointer;
            padding: 0;
            color: #666;
            z-index: 2;
        }

            .toggle-password:hover {
                color: #333;
            }

        /* Ensure consistent padding for all states */
        .form-control[type="password"],
        .form-control[type="text"] {
            padding-right: 35px !important;
        }

        /* Adjust password rules positioning */
        .password-rules {
            margin-top: 10px;
            padding-top: 10px;
            border-top: 1px solid #eee;
        }

        .password-strength {
            margin-top: 8px;
            height: 5px;
            background: #f0f0f0;
            border-radius: 3px;
            overflow: hidden;
        }

        .password-strength-bar {
            height: 100%;
            width: 0%;
            transition: width 0.3s, background 0.3s;
        }

        .password-rules {
            font-size: 13px;
            color: #666;
        }

            .password-rules ul {
                padding-left: 20px;
                margin: 5px 0;
            }

            .password-rules li.valid {
                color: #28a745;
            }

        .password-match {
            font-size: 13px;
            margin-top: 5px;
            display: none;
        }

            .password-match.valid {
                color: #28a745;
            }

            .password-match.invalid {
                color: #dc3545;
            }
    </style>
</head>
<body>
    <div class="login-wrapper">
        <div class="login-container">
            <div class="login-box">
                <img src="~/Content/logo-no-background.png" alt="E-Menu Logo" class="logo">
                <h2>Reset Password</h2>

                @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { id = "reset-password-form" }))
                {
                    @Html.HiddenFor(m => m.Username)

                    <div class="textbox password-field">
                        @Html.PasswordFor(m => m.NewPassword, new
                        {
                            id = "new-password",
                            placeholder = "New Password",
                            @class = "form-control",
                            autocomplete = "new-password",
                            required = "required"
                        })
                        <button type="button" class="toggle-password" data-target="new-password">
                            <i class="far fa-eye"></i>
                        </button>
                        <div class="password-strength">
                            <div class="password-strength-bar" id="password-strength-bar"></div>
                        </div>
                        <div class="password-rules">
                            <p>Password must contain:</p>
                            <ul>
                                <li id="rule-length">At least 8 characters</li>
                                <li id="rule-uppercase">One uppercase letter</li>
                                <li id="rule-lowercase">One lowercase letter</li>
                                <li id="rule-number">One number</li>
                                <li id="rule-special">One special character</li>
                            </ul>
                        </div>
                    </div>

                    <div class="textbox password-field">
                        @Html.PasswordFor(m => m.ConfirmPassword, new
                        {
                            id = "confirm-password",
                            placeholder = "Confirm New Password",
                            @class = "form-control",
                            autocomplete = "new-password",
                            required = "required"
                        })
                        <button type="button" class="toggle-password" data-target="confirm-password">
                            <i class="far fa-eye"></i>
                        </button>
                        <div class="password-match" id="password-match-message"></div>
                    </div>

                    <div id="notification" class="notification" hidden>
                        <span id="notification-message"></span>
                    </div>

                    <div class="button-container">
                        <button type="submit" class="login-btn" id="reset-btn">Reset Password</button>
                    </div>

                    <div class="forgot-password">
                        <a href="@Url.Action("Login", "Account")">
                            <i class="fas fa-arrow-left"></i> Back to Login
                        </a>
                    </div>
                }

                <div id="loading-spinner" class="loading-spinner" style="display: none;">
                    <div class="spinner">
                        <div></div>
                        <div></div>
                        <div></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

    <script>

        $(document).on('click', '.toggle-password', function () {
            const targetId = $(this).data('target');
            const input = $('#' + targetId);
            const icon = $(this).find('i');

            if (input.attr('type') === 'password') {
                input.attr('type', 'text');
                icon.removeClass('fa-eye').addClass('fa-eye-slash');
            } else {
                input.attr('type', 'password');
                icon.removeClass('fa-eye-slash').addClass('fa-eye');
            }
        });

        $(document).ready(function() {
            // Password strength checker
            $('#new-password').on('input', function() {
                const password = $(this).val();
                let strength = 0;

                // Length check
                if (password.length >= 8) {
                    strength += 20;
                    $('#rule-length').addClass('valid');
                } else {
                    $('#rule-length').removeClass('valid');
                }

                // Uppercase check
                if (/[A-Z]/.test(password)) {
                    strength += 20;
                    $('#rule-uppercase').addClass('valid');
                } else {
                    $('#rule-uppercase').removeClass('valid');
                }

                // Lowercase check
                if (/[a-z]/.test(password)) {
                    strength += 20;
                    $('#rule-lowercase').addClass('valid');
                } else {
                    $('#rule-lowercase').removeClass('valid');
                }

                // Number check
                if (/\d/.test(password)) {
                    strength += 20;
                    $('#rule-number').addClass('valid');
                } else {
                    $('#rule-number').removeClass('valid');
                }

                // Special char check
                if (/[^A-Za-z0-9]/.test(password)) {
                    strength += 20;
                    $('#rule-special').addClass('valid');
                } else {
                    $('#rule-special').removeClass('valid');
                }

                // Update strength bar
                $('#password-strength-bar').css('width', strength + '%');

                // Color coding
                if (strength < 40) {
                    $('#password-strength-bar').css('background', '#dc3545'); // Red
                } else if (strength < 80) {
                    $('#password-strength-bar').css('background', '#ffc107'); // Yellow
                } else {
                    $('#password-strength-bar').css('background', '#28a745'); // Green
                }
            });

            // Password match checker
            $('#confirm-password').on('input', function() {
                const confirmPassword = $(this).val();
                const newPassword = $('#new-password').val();
                const matchMessage = $('#password-match-message');

                if (confirmPassword.length > 0) {
                    if (confirmPassword === newPassword) {
                        matchMessage.text('Passwords match').addClass('valid').removeClass('invalid').show();
                    } else {
                        matchMessage.text('Passwords do not match').addClass('invalid').removeClass('valid').show();
                    }
                } else {
                    matchMessage.hide();
                }
            });

            // Form submission
            $('#reset-password-form').submit(function(e) {
                e.preventDefault();

                const newPassword = $('#new-password').val();
                const confirmPassword = $('#confirm-password').val();

                if (newPassword !== confirmPassword) {
                    showNotification('Passwords do not match', 'error');
                    return;
                }

                $('#loading-spinner').show();
                $('#reset-btn').prop('disabled', true);

                $.ajax({
                    url: $(this).attr('action'),
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function(response) {
                        showNotification(response.message, response.success ? 'success' : 'error');
                        if (response.success) {
                            setTimeout(() => {
                                window.location.href = response.redirectUrl || '@Url.Action("Login", "Account")';
                            }, 1500);
                        }
                        if (response.message === "You already submitted the form. Refreshing browser...") {
                            setTimeout(() => {
                                window.location.href = response.redirectUrl || '@Url.Action("Login", "Account")';
                            }, 1500);
                        }
                    },
                    error: function() {
                        showNotification('An error occurred. Please try again.', 'error');
                    },
                    complete: function() {
                        $('#loading-spinner').hide();
                        $('#reset-btn').prop('disabled', false);
                    }
                });
            });

            function showNotification(message, type) {
                // Set the notification message
                $('#notification-message').text(message);

                // Add class based on the type of notification (success or error)
                if (type === 'error') {
                    $('#notification').css('background-color', '#e74c3c'); // Red for errors
                } else {
                    $('#notification').css('background-color', '#2ecc71'); // Green for success
                }

                // Show the notification with a fade-in effect
                $('#notification').addClass('show');

                // Hide the notification after 5 seconds
                setTimeout(function () {
                    $('#notification').removeClass('show');
                }, 5000); // 5 seconds
            }
        });
    </script>
</body>
</html>